// Написать функцию, которая принимает на вход массив,
// проверяет каждый элемент по индексу в объекте, и
// делит их на известные значения (внутри ключа одно значение)
// и на неизвестные значения (внутри ключа несколько значений) / splitIntoKnownValuesAndUnknowns

const arrWithSolution = [
  ['1', '-', '5', '8', '-', '2', '-', '-', '-'],
  ['-', '9', '-', '-', '7', '6', '4', '-', '5'],
  ['2', '-', '-', '4', '-', '-', '8', '1', '9'],
  ['-', '1', '9', '-', '-', '7', '3', '-', '6'],
  ['7', '6', '2', '-', '8', '3', '-', '9', '-'],
  ['-', '-', '-', '-', '6', '1', '-', '5', '-'],
  ['-', '-', '7', '6', '-', '-', '-', '3', '-'],
  ['4', '3', '-', '-', '2', '-', '5', '-', '1'],
  ['6', '-', '-', '3', '-', '8', '9', '-', '-'],
];

const objectContainingValues = {
  '00': [1],
  '01': [1, 2, 3, 4, 5, 6, 7, 8, 9],
  '02': [5],
  '03': [8],
  '04': [1, 2, 3, 4, 5, 6, 7, 8, 9],
  '05': [2],
  '06': [1, 2, 3, 4, 5, 6, 7, 8, 9],
  '07': [1, 2, 3, 4, 5, 6, 7, 8, 9],
  '08': [1, 2, 3, 4, 5, 6, 7, 8, 9],
  '10': [1, 2, 3, 4, 5, 6, 7, 8, 9],
  '11': [9],
  '12': [1, 2, 3, 4, 5, 6, 7, 8, 9],
  '13': [1, 2, 3, 4, 5, 6, 7, 8, 9],
  '14': [7],
  '15': [6],
  '16': [4],
  '17': [1, 2, 3, 4, 5, 6, 7, 8, 9],
  '18': [5],
//   '20': [2],
//   '21': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '22': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '23': [4],
//   '24': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '25': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '26': [8],
//   '27': [1],
//   '28': [9],
//   '30': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '31': [1],
//   '32': [9],
//   '33': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '34': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '35': [7],
//   '36': [3],
//   '37': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '38': [6],
//   '40': [7],
//   '41': [6],
//   '42': [2],
//   '43': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '44': [8],
//   '45': [3],
//   '46': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '47': [9],
//   '48': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '50': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '51': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '52': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '53': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '54': [6],
//   '55': [1],
//   '56': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '57': [5],
//   '58': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '60': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '61': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '62': [7],
//   '63': [6],
//   '64': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '65': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '66': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '67': [3],
//   '68': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '70': [4],
//   '71': [3],
//   '72': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '73': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '74': [2],
//   '75': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '76': [5],
//   '77': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '78': [1],
//   '80': [6],
//   '81': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '82': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '83': [3],
//   '84': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '85': [8],
//   '86': [9],
//   '87': [1, 2, 3, 4, 5, 6, 7, 8, 9],
//   '88': [1, 2, 3, 4, 5, 6, 7, 8, 9],
};
function splitIntoKnownValuesAndUnknowns(oneRowOfArr, i) {
  const splitedObj = {
    known: [],
    unknown: [],
  };
  oneRowOfArr.forEach((el, index) => {
    if (el !== '-') {
      splitedObj.known.push(+el);
    } else {
      splitedObj.unknown.push(`${i}${index}`);
    }
  });
  return splitedObj;
}

for (let index = 0; index < arrWithSolution.length; index++) {
  const knownUnknown = splitIntoKnownValuesAndUnknowns(arrWithSolution[index], index);
  console.log(knownUnknown);
  
}
