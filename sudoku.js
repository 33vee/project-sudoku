/**
 * Принимает игровое поле в формате строки — как в файле sudoku-puzzles.txt.
 * Возвращает игровое поле после попытки его решить.
 * Договорись со своей командой, в каком формате возвращать этот результат.
 */
function solve(boardString) {
}


//  метод Массивов foreach и for ,узнать индекс массива пустой клетки
// i и g 
function nullCell(arr) {
let result = [];
for( let i = 0; i < arr.length; i ++) {
for( let j = 0; j < arr[i].length; j++){
  if(arr[i][j] === '-'){
    result.push([i,j])
  }
}
}
return result
}
console.log(nullCell([[1,2,3,'-'],[1,2,3,'-','-',10]]))

/**
 * Принимает игровое поле в том формате, в котором его вернули из функции solve.
 * Возвращает булевое значение — решено это игровое поле или нет.
 */



function isSolved(board) {

}

/**
 * Принимает игровое поле в том формате, в котором его вернули из функции solve.
 * Возвращает строку с игровым полем для последующего вывода в консоль.
 * Подумай, как симпатичнее сформировать эту строку.
 */
function prettyBoard(board) {

}

// Экспортировать функции для использования в другом файле (например, readAndSolve.js).
module.exports = {
  solve,
  nullCell,
  isSolved,
  prettyBoard,
};
