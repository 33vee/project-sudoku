/* eslint-disable no-unreachable-loop */
/**
 * Принимает игровое поле в формате строки — как в файле sudoku-puzzles.txt.
 * Возвращает игровое поле после попытки его решить.
 * Договорись со своей командой, в каком формате возвращать этот результат.
 */
function solve(boardString) {
}

/**
 * Принимает игровое поле в том формате, в котором его вернули из функции solve.
 * Возвращает булевое значение — решено это игровое поле или нет.
 */
function isSolved(board) {

}

/**
 * Принимает игровое поле в том формате, в котором его вернули из функции solve.
 * Возвращает строку с игровым полем для последующего вывода в консоль.
 * Подумай, как симпатичнее сформировать эту строку. (чтение текстого файла, fs)
 */
function prettyBoard(board) {
}

const sudokuArr = [
  [1, 0, 5, 8, 0, 2, 0, 0, 0]
    [0, 9, 0, 0, 7, 6, 4, 0, 5]
    [2, 0, 0, 4, 0, 0, 8, 1, 9]
    [0, 1, 9, 0, 0, 7, 3, 0, 0]
    [6, 7, 6, 2, 0, 8, 3, 0, 9]
    [0, 0, 0, 0, 0, 0, 0, 6, 1]
    [0, 5, 0, 0, 0, 7, 6, 0, 0]
    [0, 0, 3, 0, 4, 3, 0, 2, 0]
    [5, 0, 1, 6, 0, 0, 3, 0, 8],
];
function checkVertical(i, j, sudokuArr) {
  for (let i = 0; i < 9; i++) {
    for (let j = 0; j < 9; j++) {
      if (sudokuArr[i][j] !== sudokuArr[i][j + 1]) {
        // board = takeSudoku(), задать переменную и заменить на нее
        return true;
      }
    }
    return false;
  }
}
// Экспортировать функции для использования в другом файле (например, readAndSolve.js).
module.exports = {
  solve,
  isSolved,
  prettyBoard,
  checkVertical,
};
