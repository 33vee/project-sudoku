const { solve, isSolved, prettyBoard } = require('../sudoku.js');


describe('Проверка функции Solve', () => {

    test('Проверка на корректность результата.', () => {
       str = '1-58-2----9--764-52--4--819-19--73-6762-83-9-----61-5---76---3-43--2-5-16--3-89--'
       
       expect(solve(str)).toEqual([
          [
            '1', '4', '5',
            '8', '9', '2',
            '6', '7', '3'
          ],
          [
            '8', '9', '3',
            '1', '7', '6',
            '4', '2', '5'
          ],
          [
            '2', '7', '6',
            '4', '3', '5',
            '8', '1', '9'
          ],
          [
            '5', '1', '9',
            '2', '4', '7',
            '3', '8', '6'
          ],
          [
            '7', '6', '2',
            '5', '8', '3',
            '1', '9', '4'
          ],
          [
            '3', '8', '4',
            '9', '6', '1',
            '7', '5', '2'
          ],
          [
            '9', '5', '7',
            '6', '1', '4',
            '2', '3', '8'
          ],
          [
            '4', '3', '8',
            '7', '2', '9',
            '5', '6', '1'
          ],
          [
            '6', '2', '1',
            '3', '5', '8',
            '9', '4', '7'
          ]
        ]

        );
     });

  });

describe('Проверка функции isSolved', () => {
    let arr;
     beforeEach(() => {
       arr = [
        [
            '1', '4', '5',
            '8', '9', '2',
            '6', '7', '3'
          ],
          [
            '8', '9', '3',
            '1', '7', '6',
            '4', '2', '5'
          ],
          [
            '2', '7', '6',
            '4', '3', '5',
            '8', '1', '9'
          ],
          [
            '5', '1', '9',
            '2', '4', '7',
            '3', '8', '6'
          ],
          [
            '7', '6', '2',
            '5', '8', '3',
            '1', '9', '4'
          ],
          [
            '3', '8', '4',
            '9', '6', '1',
            '7', '5', '2'
          ],
          [
            '9', '5', '7',
            '6', '1', '4',
            '2', '3', '8'
          ],
          [
            '4', '3', '8',
            '7', '2', '9',
            '5', '6', '1'
          ],
          [
            '6', '2', '1',
            '3', '5', '8',
            '9', '4', '7'
          ]
        ]
     });

    test('Функция принимает массив?', () => {
      expect(Array.isArray(arr)).toBe(true);
    });

    test('Проверка на корректность результата.', () => {
      expect(isSolved(arr)).toEqual(true);
    });
    
   
  });

  describe('Общие тесты prettyBoard', () => {
    let arr;
    beforeEach (() => {
    arr = [
        [
            '1', '4', '5',
            '8', '9', '2',
            '6', '7', '3'
          ],
          [
            '8', '9', '3',
            '1', '7', '6',
            '4', '2', '5'
          ],
          [
            '2', '7', '6',
            '4', '3', '5',
            '8', '1', '9'
          ],
          [
            '5', '1', '9',
            '2', '4', '7',
            '3', '8', '6'
          ],
          [
            '7', '6', '2',
            '5', '8', '3',
            '1', '9', '4'
          ],
          [
            '3', '8', '4',
            '9', '6', '1',
            '7', '5', '2'
          ],
          [
            '9', '5', '7',
            '6', '1', '4',
            '2', '3', '8'
          ],
          [
            '4', '3', '8',
            '7', '2', '9',
            '5', '6', '1'
          ],
          [
            '6', '2', '1',
            '3', '5', '8',
            '9', '4', '7'
          ]
     ];

    });
    test('Функция принимает массив?', () => {
      expect(Array.isArray(arr)).toBe(true);
    });
    test('Функция возвращает строку?', () => {
      expect(typeof prettyBoard(arr)).toEqual("string");
    });
  });
