const { isSolved, solve } = require('../sudoku.js');

describe('isSolved', () => {
  let sudokuString;
  beforeEach(() => {
    sudokuString = '123456789123456789123456789123456789123456789123456789123456789123456789123456789';
  });
  it('проверка всех чисел на количество и отсутвие тире', () => {
    expect(isSolved(sudokuString)).toEqual(true);
  });
  it('проверка на наличие тире', () => {
    const str = '-12345678912345-6789123456789123456789123456789123456789123456789123456789123456789';
    expect(isSolved(str)).toEqual(false);
  });
  it('количесто каждого числа должно быть 9', () => {
    const strNum = '1234567891234567891234567891234567891234567891234567891234567891234567891';
    expect(isSolved(strNum)).toEqual(false);
  });
});

describe('solve', () => {
  let sudokuString;
  beforeEach(() => {
    sudokuString = '1-58-2----9--764-52--4--819-19--73-6762-83-9-----61-5---76---3-43--2-5-16--3-89--';
  });
  it('решает простое судоку', () => {
    expect(solve(sudokuString)).toEqual(
      '145892673893176425276435819519247386762583194384961752957614238438729561621358947'
    );
  });
  it('решает сложное судоку', () => {
    const str = '-3-5--8-45-42---1---8--9---79-8-61-3-----54---5------78-----7-2---7-46--61-3--5--';
    expect(solve(str)).toEqual('239517864574268319168439275792846153381975426456123987843651792925784631617392548');
  });
  it('решает судоку без значений', () => {
    const strNum = '---------------------------------------------------------------------------------';
    expect(solve(strNum)).toEqual('123456789456789123789123456214365897341278965532891674675912348897634512968547231');
  });
});
