// const sudoku = require('../sudoku.js')

describe('Summ of strings |', () => {

	it("Summ of strings 1", function() {
		expect(summStrings([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "2", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "6", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "6", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "4", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "5", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "4", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "6", "5"],
			["4", "6", "7", "5", "1", "2", "9", "8", "3"]])).toBe(1);
	});

	it("Summ of strings 2", function() {
		expect(summStrings([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "1", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "1", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "1", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "1", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "1", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "1", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "1", "5"],
			["4", "6", "7", "5", "1", "2", "9", "8", "1"]])).toBe(0);
	});

	it("Summ of strings 3", function() {
		expect(summStrings([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "2", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "6", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "a", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "4", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "5", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "4", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "6", "5"],
			["4", "6", "7", "5", "1", "2", "9", "8", "3"]])).toBe(0);
	});
})


describe('Summ of Columns |', () => {

	it("Summ of Columns 1", function() {
		expect(summColumns([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "2", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "6", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "6", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "4", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "5", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "4", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "6", "5"],
			["4", "6", "7", "5", "1", "2", "9", "8", "3"]])).toBe(1);
	});

	it("Summ of Columns 2", function() {
		expect(summColumns([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "1", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "1", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "1", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "1", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "1", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "1", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "1", "5"],
			["4", "6", "7", "5", "1", "2", "9", "8", "1"]])).toBe(0);
	});

	it("Summ of Columns 3", function() {
		expect(summColumns([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "2", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "6", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "a", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "4", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "5", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "4", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "6", "5"],
			["4", "6", "7", "5", "1", "2", "9", "8", "3"]])).toBe(0);
	});
})


describe('Summ of Cubes |', () => {

	it("Summ of Cubes 1", function() {
		expect(summCube([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "2", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "6", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "6", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "4", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "5", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "4", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "6", "5"],
			["4", "6", "7", "5", "1", "2", "9", "8", "3"]])).toBe(1);
	});

	it("Summ of Cubes 2", function() {
		expect(summCube([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "1", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "1", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "1", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "1", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "1", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "1", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "1", "5"],
			["4", "6", "7", "5", "1", "2", "9", "8", "1"]])).toBe(0);
	});

	it("Summ of Cubes 3", function() {
		expect(summCube([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "2", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "6", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "a", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "4", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "5", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "4", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "6", "5"],
			["4", "6", "7", "5", "1", "2", "9", "8", "3"]])).toBe(0);
	});
})

describe('Quantity elements |', () => {

	it("Quantity elements 1", function() {
		expect(summQuant([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "2", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "6", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "6", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "4", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "5", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "4", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "6", "5"],
			["4", "6", "7", "5", "1", "2", "9", "8", "3"]])).toBe(true);
	});

	it("Quantity elements 2", function() {
		expect(summQuant([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "1", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "1", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "1", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "1", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "1", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "1", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "1", "5"]
			])).toBe(false);
	});

	it("Quantity elements 3", function() {
		expect(summQuant([
			["1", "4", "9", "3", "6", "8", "5", "7", "2"],
			["7", "2", "8", "1", "5", "4", "3", "9", "6"],
			["5", "3", "6", "9", "2", "7", "1", "4", "8"],
			["2", "5", "4", "a", "7", "3", "8", "1", "9"],
			["8", "9", "3", "2", "4", "1", "6", "5", "7"],
			["6", "7", "1", "8", "9", "5", "2", "3", "4"],
			["9", "8", "5", "7", "3", "6", "4", "2", "1"],
			["3", "1", "2", "4", "8", "9", "7", "6", "5"],
			["4", "6", "7"]])).toBe(false);
	});
})

describe('Test smallSquare |', () => {
	it("smallSquare 1", function() {
		expect(summStrings([[1, 2, 3],[4, 5, 6],[7, 8, 9]])).toBe(0);
	});
	it("smallSquare2", function() {
		expect(summStrings([["1", "2", "3"],["4", "5", "6"],["7", "8", "9"]])).toBe(1);
	});
	it("smallSquare 3", function() {
		expect(summStrings([["1", "a", "3"],["4", "b", "6"],["7", "8", "c"]])).toBe(0);
	});
	it("smallSquare 4", function() {
		expect(summStrings([["1", "2", "3"],["4", "0", "6"],["7", "8", "9"]])).toBe(0);
	});
	it("smallSquare 5", function() {
		expect(summStrings([["1", "2", "3"],["4", "10", "6"],["7", "8", "9"]])).toBe(0);
	});
})


describe('Test smallSquare |', () => {
	it("smallSquare 1", function() {
		expect(smallSquare([[1, 2, 3],[4, 5, 6],[7, 8, 9]])).toBe(0);
	});
	it("smallSquare 2", function() {
		expect(smallSquare([["1", "2", "3"],["4", "5", "6"],["7", "8", "9"]])).toBe(1);
	});
	it("smallSquare 3", function() {
		expect(smallSquare([["1", "a", "3"],["4", "b", "6"],["7", "8", "c"]])).toBe(0);
	});
	it("smallSquare 4", function() {
		expect(smallSquare([["1", "2", "3"],["4", "0", "6"],["7", "8", "9"]])).toBe(0);
	});
	it("smallSquare 5", function() {
		expect(smallSquare([["1", "2", "3"],["4", "10", "6"],["7", "8", "9"]])).toBe(0);
	});
})


describe('Test smallSquare |', () => {
	it("summStrings1", function() {
		expect(findNumber(summStrings(  [
			["1", "-", "5", "8", "-", "2", "-", "-", "-"],
			["-", "9", "-", "-", "7", "6", "4", "-", "5"],
			["2", "-", "-", "4", "-", "-", "8", "1", "9"],
			["-", "1", "9", "-", "-", "7", "3", "-", "6"],
			["7", "6", "2", "-", "8", "3", "-", "9", "-"],
			["-", "-", "-", "-", "6", "1", "-", "5", "-"],
			["-", "-", "7", "6", "-", "-", "-", "3", "-"],
			["4", "3", "-", "-", "2", "-", "5", "-", "1"],
			["6", "-", "-", "3", "-", "8", "9", "-", "-"]] ))).toBe(1);
	});
	it("summColumns 2", function() {
		expect(summStrings(summStrings(   [
			["1", "-", "5", "8", "-", "2", "-", "-", "-"],
			["-", "9", "-", "-", "7", "6", "4", "-", "5"],
			["2", "-", "-", "4", "-", "-", "8", "1", "9"],
			["-", "1", "9", "-", "-", "7", "3", "-", "6"],
			["7", "6", "2", "-", "8", "3", "-", "9", "-"],
			["-", "-", "-", "-", "6", "1", "-", "5", "-"],
			["-", "-", "7", "6", "-", "-", "-", "3", "-"],
			["4", "3", "-", "-", "2", "-", "5", "-", "1"],
			["6", "-", "-", "3", "-", "8", "9", "-", "-"]] ))).toBe(1);
	});
	it("summCube 3", function() {
		expect(summCube(summStrings( [
			["1", "-", "5", "8", "-", "2", "-", "-", "-"],
			["-", "9", "-", "-", "7", "6", "4", "-", "5"],
			["2", "-", "-", "4", "-", "-", "8", "1", "9"],
			["-", "1", "9", "-", "-", "7", "3", "-", "6"],
			["7", "6", "2", "-", "8", "3", "-", "9", "-"],
			["-", "-", "-", "-", "6", "1", "-", "5", "-"],
			["-", "-", "7", "6", "-", "-", "-", "3", "-"],
			["4", "3", "-", "-", "2", "-", "5", "-", "1"],
			["6", "-", "-", "3", "-", "8", "9", "-", "-"]]  ))).toBe(1);
	});
	it("summQuant 4", function() {
		expect(summQuant(summStrings(  [
			["1", "-", "5", "8", "-", "2", "-", "-", "-"],
			["-", "9", "-", "-", "7", "6", "4", "-", "5"],
			["2", "-", "-", "4", "-", "-", "8", "1", "9"],
			["-", "1", "9", "-", "-", "7", "3", "-", "6"],
			["7", "6", "2", "-", "8", "3", "-", "9", "-"],
			["-", "-", "-", "-", "6", "1", "-", "5", "-"],
			["-", "-", "7", "6", "-", "-", "-", "3", "-"],
			["4", "3", "-", "-", "2", "-", "5", "-", "1"],
			["6", "-", "-", "3", "-", "8", "9", "-", "-"]] ))).toBe(1);
	});
	it("smallSquare 5", function() {
		expect(smallSquare(summStrings( [
			["1", "-", "5", "8", "-", "2", "-", "-", "-"],
			["-", "9", "-", "-", "7", "6", "4", "-", "5"],
			["2", "-", "-", "4", "-", "-", "8", "1", "9"],
			["-", "1", "9", "-", "-", "7", "3", "-", "6"],
			["7", "6", "2", "-", "8", "3", "-", "9", "-"],
			["-", "-", "-", "-", "6", "1", "-", "5", "-"],
			["-", "-", "7", "6", "-", "-", "-", "3", "-"],
			["4", "3", "-", "-", "2", "-", "5", "-", "1"],
			["6", "-", "-", "3", "-", "8", "9", "-", "-"]] ))).toBe(1);
	});
})
